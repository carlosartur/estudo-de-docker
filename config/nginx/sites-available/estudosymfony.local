server {
    listen [::]:8080;
    listen 8080;
    server_name estudosymfony.local;
    root /var/www/html/estudo_symfony/public;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    # optionally disable falling back to PHP script for the asset directories;
    # nginx will return a 404 error when files are not found instead of passing the
    # request to Symfony (improves performance but Symfony's 404 page is not displayed)
    # location /bundles {
    #     try_files $uri =404;
    # }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # optionally set the value of the environment variables used in the application
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        # Caveat: When PHP-FPM is hosted on a different machine from nginx
        #         $realpath_root may not resolve as you expect! In this case try using
        #         $document_root instead.
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    # error_log /var/log/nginx/project_error.log;
    # access_log /var/log/nginx/project_access.log;
}


# server {
#     listen [::]:8080;
#     listen 8080;
#     server_name estudosymfony.local;

#     sendfile off;

#     root /var/www/html/estudo_symfony/public;
#     index index.php index.html;

#     location / {
#         # First attempt to serve request as file, then
#         # as directory, then fall back to index.php
#         try_files $uri /index.php$is_args$args;
#     }

#     # Redirect server error pages to the static page /50x.html
#     error_page 500 502 503 504 /50x.html;
#     location = /50x.html {
#         root /var/lib/nginx/html;
#     }

#     # Pass the PHP scripts to PHP-FPM listening on 127.0.0.1:9000
#     location ~ ^/index\.php(/|$) {
#         try_files $uri =404;
#         fastcgi_split_path_info ^(.+\.php)(/.*)$;
#         fastcgi_pass 127.0.0.1:9000;
#         fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
#         fastcgi_param SCRIPT_NAME $realpath_root;
#         # fastcgi_index index.php;
#         include fastcgi_params;
#         internal;
#     }

#     location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
#         expires 5d;
#     }

#     # Deny access to . files, for security
#     location ~ /\. {
#         log_not_found off;
#         deny all;
#     }

#     # return 404 for all other php files not matching the front controller
#     # this prevents access to other php files you don't want to be accessible.
#     location ~ \.php$ {
#         return 404;
#     }

#     # Allow fpm ping and status from localhost
#     location ~ ^/(fpm-status|fpm-ping)$ {
#         access_log off;
#         allow 127.0.0.1;
#         deny all;
#         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#         include fastcgi_params;
#         fastcgi_pass 127.0.0.1:9000;
#     }
# }